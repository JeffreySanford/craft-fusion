@use '@angular/material' as mat;

.container {
  text-align: center;
  padding: 20px;
  background-color: rgba(255, 0, 0, 0.1);
  color: mat.get-color(mat.$blue-palette, 500);

  h1 {
    color: mat.get-color(mat.$blue-palette, 500);
  }

  p {
    color: mat.get-color(mat.$blue-palette, 500);
  }
}

.button-grid {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 20px;
  margin-top: 20px;
}

.button-card {
  width: 250px;
  padding: 15px;
  background-color: #ffffff;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

  mat-card-title {
    font-size: 16px;
    color: $primary-color;
  }

  mat-card-content {
    display: flex;
    flex-direction: column;
    gap: 10px;

    button {
      margin: 5px 0;
    }
  }
}

.elevated-button {
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: box-shadow 0.3s ease;

  &:hover {
    box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
  }
}

button.mat-raised-button-primary {
  background-color: $primary-color;
  color: $accent-color;

  &:hover {
    background-color: darken($primary-color, 10%);
  }
}

button.mat-raised-button-accent {
  background-color: $accent-color;
  color: $primary-color;

  &:hover {
    background-color: darken($accent-color, 10%);
  }
}

button.mat-raised-button-warn {
  background-color: $warn-color;
  color: white;

  &:hover {
    background-color: darken($warn-color, 10%);
  }
}

/* startup */
/* Load entry module and return exports */
/* This entry module doesn't tell about its top-level declarations so it can't be inlined */
.button {
  color: mat.get-color(mat.$blue-palette, 500);
}