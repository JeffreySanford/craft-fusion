.dashboard {
  display: flex;
  flex-wrap: wrap;
  gap: 1em;
}

.dashboard-tile {
  flex: 1 1;
  min-width: 30em;
  box-sizing: border-box;
}

// Dashboard layout with sidebar
.dashboard-layout {
  display: flex;
  height: calc(100vh - 3em); // Adjust based on your header height
  overflow: hidden;
}

// Main visualization container with enhanced grid
.visualization-container {
  flex: 1;
  display: grid;
  grid-template-columns: repeat(12, 1fr); // 12-column layout
  grid-auto-rows: min-content; // Use min-content to size rows based on their content
  gap: 20px; // Consistent gap in both directions
  padding: 20px;
  overflow-y: auto;
  background-color: rgba(0, 0, 0, 0.1);
}

// Empty state styling
.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  grid-column: 1 / -1; // Span all columns
  min-height: 300px;
  color: rgba(255, 255, 255, 0.5);
  
  mat-icon {
    font-size: 4rem;
    width: 4rem;
    height: 4rem;
    margin-bottom: 1rem;
  }
  
  h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
  }
  
  p {
    font-size: 1rem;
  }
}

// Sidebar styling
.visualization-sidebar {
  width: 280px;
  display: flex;
  flex-direction: column;
  background-color: rgba(0, 0, 0, 0.2);
  border-left: 1px solid rgba(255, 255, 255, 0.1);
  transition: width 0.3s ease;
  position: relative;
  
  &.collapsed {
    width: 60px;

    .sidebar-header h2 {
      display: none;
    }

    .sidebar-content {
      mat-list-item {
        padding: 4px;

        [matListItemTitle] {
          display: none;
        }
      }
    }

    .sidebar-toggle {
      position: absolute;
      right: 0;
    }
  }
  
  .sidebar-header {
    padding: 16px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    display: flex;
    justify-content: space-between;
    align-items: center;
    
    h2 {
      margin: 0;
      color: gold;
      font-size: 1.2rem;
    }

    .sidebar-toggle {
      color: gold;
      transition: all 0.3s ease;
      
      &:hover {
        background-color: rgba(255, 215, 0, 0.1);
      }
    }
  }
  
  .sidebar-content {
    overflow-y: auto;
    flex: 1;
    
    mat-list-item {
      cursor: pointer;
      
      &:hover {
        background-color: rgba(255, 255, 255, 0.05);
      }
      
      &.active {
        background-color: rgba(255, 255, 255, 0.1);
        border-left-width: 3px;
        border-left-style: solid;
        // Border color will be dynamically set based on the chart's color
      }
      
      // Make icons more visible
      mat-icon {
        font-size: 20px;
        height: 20px;
        width: 20px;
        
        // Add specific styling for action icons
        &[matListItemMeta] {
          color: rgba(255, 255, 255, 0.6);
          
          // When active, use the chart's color (will be set in JS)
          &.active-icon {
            color: inherit; // Will inherit from the parent which gets dynamically set
          }
        }
      }
      
      &.active mat-icon[matListItemMeta] {
        color: inherit; // Will inherit from the parent
      }
      
      &:hover mat-icon[matListItemMeta] {
        color: white;
      }
    }
  }
}

// Individual visualization item styling
.visualization-item {
  position: relative;
  transition: all 0.3s ease;
  display: block; // Changed from flex
  height: auto; // Let content determine height instead of 100%
  
  // Standard sizes
  &.size-small {
    grid-column: span 4; // 3 per row (4+4+4=12)
    grid-row: span 1;
    min-height: 250px; // Reduce minimum height
    margin-bottom: 0; // Remove extra margin to let grid gap control spacing
  }
  
  &.size-medium {
    grid-column: span 6; // 2 per row (6+6=12)
    grid-row: span 1;
    min-height: 280px; // Adjust for consistency
    margin-bottom: 0; // Remove extra margin
  }
  
  &.size-large {
    grid-column: span 8; // Large standard size
    grid-row: span 2;
    min-height: 380px; // Adjust for consistency
    margin-bottom: 0; // Remove extra margin
  }
  
  // Adaptive small tile layouts based on count
  &.small-tile-full {
    grid-column: span 12 !important; // Full width
    min-height: 300px;
  }
  
  &.small-tile-half {
    grid-column: span 6 !important; // Half width (2 per row)
    min-height: 280px;
  }
  
  &.small-tile-third {
    grid-column: span 4 !important; // Third width (3 per row)
    min-height: 260px;
  }
  
  &.small-tile-fourth {
    grid-column: span 3 !important; // Quarter width (4 per row)
    min-height: 240px;
  }
  
  // Medium tile variations
  &.medium-tile-full {
    grid-column: span 12 !important; // Full width
    min-height: 350px;
  }
  
  &.medium-tile-standard {
    grid-column: span 6 !important; // Standard width
    min-height: 320px;
  }
  
  // Large tile variations
  &.size-large-single {
    grid-column: span 12 !important; // Full width when alone
    grid-row: span 2;
    min-height: 450px;
  }
  
  &.size-large-half {
    grid-column: span 6 !important; // Half width when paired
    grid-row: span 2;
    min-height: 500px;   // Increased height for better visualization
    margin-bottom: 16px;
    
    .chart-card {
      height: 100%;
    }
    
    // Ensure consistent height when paired
    &:nth-child(2) {
      height: 100%;
    }
  }
  
  &.size-large-standard {
    grid-column: span 8 !important; // Standard width for 3+ large tiles
    grid-row: span 2;
    min-height: 380px;
  }
  
  // Medium + Small combination
  &.medium-with-small {
    grid-column: span 8 !important; // Take larger portion
    grid-row: span 1;
    min-height: 280px;
  }
  
  &.small-with-medium {
    grid-column: span 4 !important; // Take smaller portion
    grid-row: span 1;
    min-height: 280px;
  }
  
  // Make drag handle visible
  &.cdk-drag-preview {
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
  }
  
  &.cdk-drag-placeholder {
    opacity: 0.3;
  }
  
  &.cdk-drag-animating {
    transition: transform 250ms cubic-bezier(0,0,0.2,1);
  }

  // New styles for full-size expanded view
  &.full-expanded {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100vw;
    height: 100vh;
    z-index: 1000;
    background-color: rgba(0, 0, 0, 0.85);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    margin: 0;
    box-sizing: border-box;
    overflow: auto;
    
    .chart-card {
      width: 95%;
      height: 95%;
      max-width: 1600px;
      max-height: 900px;
      transform: none;
      
      mat-card-content {
        height: calc(100% - 60px); // Adjust based on header height
        
        .chart-content {
          height: 100%;
          padding: 24px; // Increase padding for better spacing in fullscreen
          
          &.line-chart-content,
          &.bar-chart-content,
          &.finance-chart-content,
          &.scrollable-chart-content {
            height: 100%; // Use full height in fullscreen
            max-height: none; // No max height in fullscreen
            overflow: visible; // Keep overflow visible for chart elements
          }
          
          // Add special handling for charts that need scrolling
          &.scrollable-chart-content {
            overflow-y: auto;
          }
        }
      }
    }
    
    // Hide drag handle cursor in full-screen mode
    mat-card-header {
      cursor: default;
    }
  }
  
  // Special layout handling for small items when preceded by larger ones
  .visualization-item.size-small:nth-child(3):not(:first-child) {
    grid-column-start: 1; // Force third small item to start at first column of next row
  }
}

// Adaptive small tile sizing based on quantity
.small-tile-full {
  grid-column: span 12 !important; // Full width (all 12 columns)
  min-height: 300px;
}

.small-tile-half {
  grid-column: span 6 !important; // Half width (6 columns)
  min-height: 280px;
  
  // When 2 or 4 small tiles are present, ensure they form proper rows
  &.first-row {
    grid-row: 1;
  }
  
  &.second-row {
    grid-row: 2;
  }
}

.small-tile-third {
  grid-column: span 4 !important; // One-third width (4 columns)
  min-height: 260px;
}

.small-tile-fourth {
  grid-column: span 3 !important; // One-fourth width (3 columns)
  min-height: 240px;
}

// Ensure the base .size-small class doesn't override our special layouts
.visualization-item.size-small {
  &[class*="small-tile-"] {
    grid-column: auto; // Let the special classes handle the width
  }
}

// Medium + Small combination classes
.medium-with-small {
  grid-column: span 8; // Take up 8 columns (instead of 6)
  grid-row: span 1;
  height: 280px;
}

.small-with-medium {
  grid-column: span 4; // Take up 4 columns
  grid-row: span 1;
  height: 280px; // Match height with the medium tile
}

// Card styling for each visualization
.chart-card {
  display: flex;
  flex-direction: column;
  height: 100%; // Fill the entire grid cell
  width: 100%;
  background-color: rgba(0, 0, 0, 0.2);
  color: white;
  transition: all 0.3s ease;
  border: 1px solid rgba(255, 0, 0, 0.5);
  border-radius: 8px;
  overflow: hidden;
  
  &:hover {
    border-color: gold;
    box-shadow: 0 4px 12px rgba(255, 215, 0, 0.3);
  }
  
  &.expanded {
    z-index: 10;
    transform: scale(1.02);
    border-color: gold;
    box-shadow: 0 8px 24px rgba(255, 215, 0, 0.5);
  }
  
  // Card header styling
  mat-card-header {
    background-color: rgba(0, 0, 0, 0.3);
    padding: 12px 16px;
    display: flex;
    align-items: center;
    cursor: move; // Indicate draggable
    position: relative; // For positioning the close button
    
    .chart-title {
      color: white;
      margin: 0;
      font-size: 1.2rem;
      flex: 1;
      display: flex;
      align-items: center;
      padding-right: 40px; // Make space for the close button
      
      mat-icon {
        margin-right: 8px;
        font-size: 20px;
        height: 20px;
        width: 20px;
      }
    }
    
    .remove-button {
      color: rgba(255, 255, 255, 0.7);
      position: absolute;
      right: 8px;
      top: 50%;
      transform: translateY(-50%);
      margin-left: auto;
      
      &:hover {
        color: white;
        background-color: rgba(255, 0, 0, 0.3);
      }
      
      min-width: 36px;
      min-height: 36px;
      width: 36px;
      height: 36px;
      line-height: 36px;
      
      mat-icon {
        font-size: 18px;
        height: 18px;
        width: 18px;
      }
      
      &:hover mat-icon {
        color: white !important;
      }
    }
    
    // Add restore button styling
    .restore-button {
      color: inherit;
      opacity: 0.8;
      position: absolute;
      right: 48px; // Position next to close button
      top: 50%;
      transform: translateY(-50%);
      margin-left: auto;
      
      &:hover {
        opacity: 1;
        background-color: rgba(255, 255, 255, 0.2);
      }
      
      min-width: 36px;
      min-height: 36px;
      width: 36px;
      height: 36px;
      line-height: 36px;
      
      mat-icon {
        font-size: 18px;
        height: 18px;
        width: 18px;
      }
    }
    
    // Use chart color for header background
    &.custom-colored {
      background-color: rgba(0, 0, 0, 0.3);
      
      // Title text and icon color inherit from chart color
      .chart-title {
        color: inherit;
        
        mat-icon {
          color: inherit;
        }
      }
      
      // Close button matches title color
      .remove-button {
        color: inherit;
        opacity: 0.8;
        
        &:hover {
          opacity: 1;
          background-color: rgba(255, 255, 255, 0.2);
        }
      }
    }
  }
  
  // Card content styling
  mat-card-content {
    flex: 0 auto; // Changed from flex: 1 to avoid stretching
    padding: 0;
    overflow: visible; // Changed from auto to visible
    position: relative; // For proper sizing of charts
    
    .chart-content {
      height: auto; // Allow content to determine height
      padding: 16px;
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
    }
  }
}

// Chart content container styles
.chart-content {
  height: auto; // Let content determine height
  padding: 16px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  
  // Fixed heights for simple charts - adjusted to ensure content isn't cut off
  &.line-chart-content {
    height: 220px; // Reduced fixed height
    min-height: 220px; // Add min-height to ensure enough space
    max-height: 220px;
    overflow: visible; // Allow chart elements to overflow their container
  }
  
  &.bar-chart-content {
    height: 220px; // Reduced fixed height
    min-height: 220px; // Add min-height to ensure enough space
    max-height: 220px;
    overflow: visible; // Allow chart elements to overflow their container
  }
  
  &.finance-chart-content {
    height: 250px; // Reduced fixed height
    max-height: 250px;
    overflow: visible; // Allow chart elements to overflow their container
  }
  
  // Scrollable content for complex charts
  &.scrollable-chart-content {
    overflow-y: auto;
    max-height: 500px; // Add a max-height for very large content
  }
  
  // Base styling for all charts
  &.fixed-chart-content {
    overflow: visible; // Changed from hidden to visible
    justify-content: flex-start;
    align-items: stretch;
  }
}

// Make sure mat-card-content adjusts height properly
mat-card-content {
  flex: 1;
  overflow: visible; // Changed from hidden to visible
  display: flex;
  flex-direction: column;
}

// Ensure expanded tiles show content properly
.chart-card.expanded {
  .chart-content.scrollable-chart-content {
    // Remove fixed max-height
    height: auto;
  }
  
  .chart-content.fixed-chart-content {
    height: auto;
    min-height: auto; // Let content determine height
  }
}

// Add specific sizing for each chart type using class-based approach
.visualization-item.chart-type-line .chart-card,
.visualization-item.chart-type-bar .chart-card {
  max-height: 320px;
}

.visualization-item.chart-type-finance .chart-card {
  max-height: 350px;
}

// Force proper Angular Material styling
::ng-deep .mat-card-content {
  display: block !important;
}

// Full screen backdrop
.fullscreen-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 999;
  background-color: transparent;
}

// Responsive styling for different screen sizes
@media (max-width: 1200px) {
  .visualization-container {
    grid-template-columns: repeat(6, 1fr); // 6-column grid on medium screens
    gap: 16px;
  }
  
  .visualization-item {
    &.size-small, &.small-tile-third, &.small-tile-fourth {
      grid-column: span 3 !important; // 2 per row on medium screens
    }
    
    &.size-medium, &.medium-tile-standard, 
    &.size-large, &.size-large-half, &.size-large-standard {
      grid-column: span 6 !important; // Full width on medium screens
    }
    
    &.medium-with-small {
      grid-column: span 4 !important;
    }
    
    &.small-with-medium {
      grid-column: span 2 !important;
    }
  }
}

@media (max-width: 768px) {
  .dashboard-layout {
    flex-direction: column;
    height: auto;
  }
  
  .visualization-container {
    grid-template-columns: repeat(4, 1fr); // 4-column grid on small screens
    gap: 12px;
    padding: 12px;
    order: 2;
  }
  
  .visualization-item {
    grid-column: span 4 !important; // All tiles full width on mobile
    min-height: 300px;
  }
  
  .visualization-sidebar {
    width: 100%;
    order: 1;
    border-left: none;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    
    &.collapsed {
      width: 100%;
      height: 60px;
    }
  }
  
  .visualization-item {
    min-height: 300px;
  }
}

.chart-name {
  font-size: 1.5em;
  margin-bottom: 0.5em;
  color: gold;
}

.chart-card:hover {
  background-color: rgba(0, 0, 0, 0.3);
  border-color: gold;
}

.chart-card:focus-within {
  background-color: rgba(0, 0, 0, 0.3);
  border-color: gold;
}

// Fix any stray Material icon issues
::ng-deep {
  .mat-icon {
    font-family: 'Material Icons', sans-serif;
    display: inline-block;
  }
  
  // Ensure Material Design Icons are properly sized in lists
  .mat-list-item-content {
    .mat-list-icon {
      font-size: 24px;
      height: 24px;
      width: 24px;
    }
  }
}

// Add specific chart sizing for better visibility when multiple charts are displayed
.visualization-container:not(.single-chart) {
  .visualization-item .chart-content {
    min-height: 250px; // Ensure minimum height in grid layout
  }
}

// Ensure proper sizing in fullscreen mode
.visualization-item.full-expanded {
  .chart-card {
    width: 95%;
    height: 95%;
    max-width: 1600px;
    max-height: 900px;
    transform: none;
    
    mat-card-content {
      height: calc(100% - 60px);
      overflow: visible;
      
      .chart-content {
        height: 100%;
        padding: 24px;
        min-height: auto; // Reset min-height in fullscreen
        
        &.bar-chart-content,
        &.line-chart-content,
        &.finance-chart-content {
          height: 100%;
          max-height: none;
          overflow: visible;
        }
      }
    }
  }
}

.size-large-single {
  grid-column: span 12;
  grid-row: span 2;
}

// Enhanced large tile variations
.size-large-single {
  grid-column: span 12 !important; // Full width when alone
  grid-row: span 2;
  min-height: 500px;
  margin-bottom: 0; // Remove extra margin
  
  .chart-card {
    height: 100%;
  }
}

.size-large-half {
  grid-column: span 6 !important; // Half width when paired
  grid-row: span 2;
  min-height: 500px;
  margin-bottom: 0; // Remove extra margin
  height: 100%;
  
  .chart-card {
    height: 100%;
  }
}

.size-large-half {
  grid-column: span 6; // Exactly half of the 12-column grid
  grid-row: span 2;    // Same height as single large tile
  height: 100%;        // Ensure full height utilization
}

// Add specific rule to ensure proper wrapping for small tiles
@media (min-width: 1201px) {
  // Force small tiles to wrap after every 3 tiles
  .visualization-item.size-small:nth-child(3n+1) {
    grid-column-start: auto;
  }
}

// Add global styles for patriotic dialog
::ng-deep .patriotic-dialog {
  .mat-mdc-dialog-container {
    --mdc-dialog-container-color: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25);
  }
  
  .mat-mdc-dialog-surface {
    border-radius: 8px;
    overflow: hidden;
  }
}

.size-large-single {
  margin-bottom: 0 !important;
}

.size-large-half {
  margin-bottom: 0 !important;
}

.size-large-standard {
  margin-bottom: 0 !important;
}

.medium-tile-full, 
.medium-tile-standard, 
.small-tile-full, 
.small-tile-half, 
.small-tile-third, 
.small-tile-fourth {
  margin-bottom: 0 !important;
}
