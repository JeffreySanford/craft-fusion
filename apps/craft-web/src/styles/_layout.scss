@use 'variables' as vars;
@use 'sass:map';

// Basic layout containers
.container-wrapper {
  min-height: 100vh;
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  position: relative;
  overflow: visible;
}

.responsive-container {
  padding: 24px;
  margin: 0 auto;
  width: 100%;
  max-width: 1200px;
  
  @media (max-width: map.get(vars.$breakpoints, md)) {
    padding: 16px;
  }
}

// Root element styles
app-root {
  overflow: visible;
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100vh;
  min-height: 100%;
}

// Nested layout containers
.recipe-content-wrapper {
  display: flex;
  flex-direction: column;
  flex: 1;
  height: 100%;
  min-height: 100vh;
  overflow: visible;
}

// Flex utilities
.flex {
  display: flex;
}

.flex-col {
  display: flex;
  flex-direction: column;
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.flex-1 {
  flex: 1;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-stretch {
  align-items: stretch;
}

// Grid utilities
.grid {
  display: grid;
}

.card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 24px;
  padding: 24px;
}

// Spacing utilities
@each $key, $value in vars.$spacing {
  .p-#{$key} {
    padding: $value;
  }
  
  .pt-#{$key} {
    padding-top: $value;
  }
  
  .pr-#{$key} {
    padding-right: $value;
  }
  
  .pb-#{$key} {
    padding-bottom: $value;
  }
  
  .pl-#{$key} {
    padding-left: $value;
  }
  
  .px-#{$key} {
    padding-left: $value;
    padding-right: $value;
  }
  
  .py-#{$key} {
    padding-top: $value;
    padding-bottom: $value;
  }
  
  .m-#{$key} {
    margin: $value;
  }
  
  .mt-#{$key} {
    margin-top: $value;
  }
  
  .mr-#{$key} {
    margin-right: $value;
  }
  
  .mb-#{$key} {
    margin-bottom: $value;
  }
  
  .ml-#{$key} {
    margin-left: $value;
  }
  
  .mx-#{$key} {
    margin-left: $value;
    margin-right: $value;
  }
  
  .my-#{$key} {
    margin-top: $value;
    margin-bottom: $value;
  }
  
  .gap-#{$key} {
    gap: $value;
  }
}

// Responsive utilities
@each $bp-name, $bp-value in vars.$breakpoints {
  @media (min-width: $bp-value) {
    .#{$bp-name}:flex {
      display: flex;
    }
    
    .#{$bp-name}:grid {
      display: grid;
    }
    
    .#{$bp-name}:hidden {
      display: none;
    }
    
    .#{$bp-name}:block {
      display: block;
    }
  }
}

// Scrollable container
.scrollable {
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

.scrollable-x {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

// Dashboard layout components
.dashboard-widget {
  background: var(--md-sys-color-surface);
  border-radius: 12px;
  padding: 16px;
  box-shadow: var(--md-sys-elevation-level1);
  
  .widget-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;

    h3 {
      margin: 0;
      color: var(--md-sys-color-on-surface);
    }
  }

  &.metric {
    text-align: center;
    
    .metric-value {
      font-size: 36px;
      font-weight: 500;
      color: var(--md-sys-color-primary);
    }
    
    .metric-label {
      color: var(--md-sys-color-on-surface-variant);
      font-size: 14px;
    }
  }
}

// Position utilities
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.sticky {
  position: sticky;
}

.top-0 {
  top: 0;
}

.right-0 {
  right: 0;
}

.bottom-0 {
  bottom: 0;
}

.left-0 {
  left: 0;
}

.z-0 {
  z-index: 0;
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}

.z-30 {
  z-index: 30;
}

.z-40 {
  z-index: 40;
}

.z-50 {
  z-index: 50;
}

// Size utilities
.w-full {
  width: 100%;
}

.h-full {
  height: 100%;
}

.min-h-screen {
  min-height: 100vh;
}

// Background video styles
#background-video {
  position: fixed;
  inset: -2em -2em 0 -2em;
  min-height: 100%;
  width: 100vw;
  height: auto;
  z-index: -1;
  opacity: 0.4;
  filter: grayscale(50%) blur(0.2em);
  object-fit: cover;
  transform: scale(1.1);
  overflow: hidden;
}
