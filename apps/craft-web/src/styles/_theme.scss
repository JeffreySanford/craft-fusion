@use 'sass:map';
@use 'sass:meta';
// @use '@angular/material/theming' as mat;
@use './variables' as vars;

// Light theme color scheme
$light-theme-colors: (
  primary: #002868, // Navy blue
  on-primary: #FFFFFF,
  primary-container: #D6E2FF,
  on-primary-container: #001849,
  
  secondary: #BF0A30, // USA Red
  on-secondary: #FFFFFF,
  secondary-container: #FFD9D9,
  on-secondary-container: #400012,
  
  tertiary: #FFD700, // USA Gold
  on-tertiary: #000000,
  tertiary-container: #FFF8DC,
  on-tertiary-container: #493900,
  
  surface: #F8F9FA,
  on-surface: #1A1C1E,
  surface-variant: #E7E0EC,
  on-surface-variant: #49454F,
  
  background: #F8F9FA,
  on-background: #1A1C1E,
  
  error: #B3261E,
  on-error: #FFFFFF,
  
  outline: #79747E,
  shadow: #000000
);

// Dark theme color scheme
$dark-theme-colors: (
  primary: #B6C5FF, // Lighter blue for dark theme
  on-primary: #002E6A,
  primary-container: #004395,
  on-primary-container: #D6E2FF,
  
  secondary: #FFB4AB, // Lighter red for dark theme
  on-secondary: #690020,
  secondary-container: #93000A,
  on-secondary-container: #FFD9D9,
  
  tertiary: #FFD700, // Gold remains the same
  on-tertiary: #1C1500,
  tertiary-container: #302A00,
  on-tertiary-container: #FFE979,
  
  surface: #1A1C1E,
  on-surface: #E2E2E6,
  surface-variant: #49454F,
  on-surface-variant: #CAC4D0,
  
  background: #111214, 
  on-background: #E2E2E6,
  
  error: #F2B8B5,
  on-error: #601410,
  
  outline: #938F99,
  shadow: #000000
);

// Generate CSS variables for both themes
@mixin generate-theme-variables($colors, $prefix: '') {
  @each $name, $value in $colors {
    #{$prefix}--md-sys-color-#{$name}: #{$value};
  }
}

@mixin apply-theme-variables() {
  // Light theme variables
  :root, .light-theme, [data-theme="light"] {
    // Generate light theme variables
    @include generate-theme-variables($light-theme-colors);
    
    // Material-specific tokens
    --md-sys-elevation-level1: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    --md-sys-elevation-level2: 0 3px 6px rgba(0,0,0,0.15), 0 2px 4px rgba(0,0,0,0.12);
    --md-sys-elevation-level3: 0 10px 20px rgba(0,0,0,0.15), 0 3px 6px rgba(0,0,0,0.10);
    --md-sys-elevation-level4: 0 14px 28px rgba(0,0,0,0.20), 0 10px 10px rgba(0,0,0,0.15);
    --md-sys-elevation-level5: 0 19px 38px rgba(0,0,0,0.25), 0 15px 12px rgba(0,0,0,0.18);
    
    // Header gradients
    --header-gradient: linear-gradient(
      135deg,
      #001f54 0%,
      #033277 30%,
      #792433 70%,
      #a01c33 100%
    );
    
    // Menu gradients 
    --menu-gradient: linear-gradient(135deg, 
      rgba(0, 0, 102, 0.95) 0%,
      rgba(139, 0, 0, 0.95) 50%,
      rgba(0, 0, 102, 0.95) 100%
    );
  }
  
  // Dark theme variables
  .dark-theme, [data-theme="dark"] {
    // Generate dark theme variables
    @include generate-theme-variables($dark-theme-colors);
    
    // Material-specific tokens
    --md-sys-elevation-level1: 0 1px 3px rgba(0,0,0,0.24), 0 1px 2px rgba(0,0,0,0.36);
    --md-sys-elevation-level2: 0 3px 6px rgba(0,0,0,0.26), 0 2px 4px rgba(0,0,0,0.34);
    --md-sys-elevation-level3: 0 10px 20px rgba(0,0,0,0.29), 0 3px 6px rgba(0,0,0,0.23);
    --md-sys-elevation-level4: 0 14px 28px rgba(0,0,0,0.35), 0 10px 10px rgba(0,0,0,0.28);
    --md-sys-elevation-level5: 0 19px 38px rgba(0,0,0,0.40), 0 15px 12px rgba(0,0,0,0.32);
    
    // Header gradients - darker for dark theme
    --header-gradient: linear-gradient(
      135deg,
      #000d24 0%,
      #001f54 30%,
      #4a0f1d 70%,
      #6a0f21 100%
    );
    
    // Menu gradients - darker for dark theme
    --menu-gradient: linear-gradient(135deg, 
      rgba(0, 0, 60, 0.95) 0%,
      rgba(90, 0, 0, 0.95) 50%,
      rgba(0, 0, 60, 0.95) 100%
    );
  }
}

// Angular Material theme configuration
@mixin configure-material-themes() {
  // @include mat.core();

  // Use Angular Material's built-in palettes:
  // Replace define-light-theme and define-dark-theme with define-theme
  // $light-theme: mat.define-theme((
  //   color: (
  //     primary: mat.define-palette(mat.$blue-palette),
  //     accent: mat.define-palette(mat.$red-palette),
  //     warn: mat.define-palette(mat.$amber-palette)
  //   )
  // ));

  // $dark-theme: mat.define-theme((
  //   color: (
  //     primary: mat.define-palette(mat.$blue-palette, 200),
  //     accent: mat.define-palette(mat.$red-palette, 200),
  //     warn: mat.define-palette(mat.$amber-palette)
  //   )
  // ));

  // Apply the light theme by default
  // @include mat.all-component-themes($light-theme);
  
  // Apply the dark theme only when the .dark-theme class is applied to the body
  // .dark-theme {
  //   @include mat.all-component-colors($dark-theme);
  // }
}