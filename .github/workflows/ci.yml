name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      # 📥 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Fetch all branches
      - name: Fetch all branches
        run: git fetch --all

      # ⚙️ Setup Node Environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      # 📦 Cache npm Dependencies
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-

      # 📦 Install Dependencies
      - name: Install Dependencies
        run: npm ci

      # 🔄 Set NX SHAs
      - name: Set NX SHAs
        id: set_nx_shas
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: master
          error-on-no-successful-workflow: false
          last-successful-event: push
          working-directory: .
          workflow-id: ''
          fallback-sha: ''

      # ✅ Run Format Check
      - name: Format Check
        run: |
          if [ -z "${{ steps.set_nx_shas.outputs.base }}" ]; then
            echo "NX_BASE is empty, defaulting to all files."
            npx nx format:check --all
          else
            npx nx-cloud record -- nx format:check --base=${{ steps.set_nx_shas.outputs.base }} --head=${{ steps.set_nx_shas.outputs.head }}
          fi
        env:
          NX_BASE: ${{ steps.set_nx_shas.outputs.base }}
          NX_HEAD: ${{ steps.set_nx_shas.outputs.head }}

      # 🧪 Run Jest Tests with Coverage
      - name: Run Jest Tests
        run: |
          npx nx affected -t test --configuration=ci --coverage --coverageReporters=text-summary,lcov --outputFile=reports/jest/results.xml || echo "No tests found"

      # 📊 Upload Jest Test Results
      - name: Upload Jest Test Results
        if: success() || failure()
        uses: dorny/test-reporter@v1
        with:
          name: Jest Test Results
          path: reports/jest/results.xml
          reporter: jest-junit
          fail-on-error: false

      # 📈 Upload Coverage Reports
      - name: Upload Coverage Reports
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false
          verbose: true

      # 🏗️ Build Affected Projects
      - name: Build Affected Projects
        run: npx nx affected -t build --configuration=ci

      # 🧪 Run E2E Tests
      - name: Run E2E Tests
        run: npx nx affected -t e2e-ci --configuration=ci

      # 📤 Upload Build Artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: build-artifacts
          path: dist
